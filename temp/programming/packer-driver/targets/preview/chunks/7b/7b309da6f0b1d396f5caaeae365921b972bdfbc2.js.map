{"version":3,"sources":["file:///Users/bane/cocos-3.x-qrcode2/assets/scripts/test.ts"],"names":["_decorator","Color","Component","QRErrorCorrectLevel","QRCode","ccclass","property","test","cc","Node","ctx","start","ctxNode","getComponent","Graphics","addComponent","QRCreate","editBoxChange","data","log","url","Wcolor","Hcolor","WHITE","BLACK","qrcode","H","addData","make","fillColor","roll","Math","floor","getModuleCount","tileW","UITransform","width","tileH","height","clear","row","col","w","ceil","h","posx","round","posy","rect","isDark","fill"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, Node } from \"cc\";\nimport * as cc from \"cc\";\nimport { QRErrorCorrectLevel } from \"./QRcode/constants\";\nimport { QRCode } from \"./QRcode/QRCode\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"test\")\nexport class test extends Component {\n  @property(cc.Node)\n  ctxNode: Node;\n  ctx: cc.Graphics;\n\n  start() {\n    this.ctx = this.ctxNode.getComponent(cc.Graphics);\n    if (!this.ctx) {\n      this.ctx = this.ctxNode.addComponent(cc.Graphics);\n    }\n\n    //我的qq链接\n    this.QRCreate(\"https://qm.qq.com/q/z6T5CRZbfc&personal_qrcode_source=3\");\n  }\n\n  //输入框 内容发生变化\n  editBoxChange(data: String) {\n    cc.log(data);\n    this.QRCreate(data);\n  }\n\n  //绘制二维码\n  /**\n   *\n   * @param ctxNode 显示的节点\n   * @param url 文本内容\n   * @param Wcolor 白块颜色\n   * @param Hcolor 黑块颜色\n   */\n  QRCreate(url, Wcolor = Color.WHITE, Hcolor = Color.BLACK) {\n    //根据QRCode来生成二维码数据\n    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    qrcode.addData(url);\n    qrcode.make();\n\n    this.ctx.fillColor = cc.Color.BLACK;\n    let roll = Math.floor(qrcode.getModuleCount());\n    //块宽高\n    var tileW = this.ctxNode.getComponent(cc.UITransform).width / roll;\n    var tileH = this.ctxNode.getComponent(cc.UITransform).height / roll;\n    this.ctx.clear();\n    for (var row = 0; row < qrcode.getModuleCount(); row++) {\n      for (var col = 0; col < qrcode.getModuleCount(); col++) {\n        var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n        var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n        let posx =\n          Math.round(col * tileW) -\n          this.ctxNode.getComponent(cc.UITransform).width / 2;\n        let posy =\n          Math.round(row * tileH) -\n          this.ctxNode.getComponent(cc.UITransform).height / 2;\n\n        this.ctx.rect(posx, posy, w, h);\n        //颜色\n        if (qrcode.isDark(row, col)) {\n          this.ctx.fillColor = Wcolor;\n        } else {\n          this.ctx.fillColor = Hcolor;\n        }\n        this.ctx.fill();\n      }\n    }\n  }\n}\n"]}