{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/CQRCode.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","prototype","getLength","buffer","length","write","i","put","charCodeAt","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","Array","addData","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","totalDataCount","dataCount","QRUtil","getLengthInBits","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","count","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","e","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit","CQRCode","cc","Class","extends","Graphics","properties","string","default","notify","oldValue","setContent","backColor","Color","WHITE","foreColor","BLACK","old","node","color","margin","Float","_size","size","set","value","setContentSize","onLoad","clear","fillColor","width","offsetX","anchorX","offsetY","anchorY","rect","fill","close","qrcode","tileW","tileH","w","ceil","h","round","Attr","setClassAttr","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n //---------------------------------------------------------------------\n // QRCode for JavaScript\n //\n // Copyright (c) 2009 Kazuhiko Arase\n //\n // URL: http://www.d-project.com/\n //\n // Licensed under the MIT license:\n //   http://www.opensource.org/licenses/mit-license.php\n //\n // The word \"QR Code\" is registered trademark of \n // DENSO WAVE INCORPORATED\n //   http://www.denso-wave.com/qrcode/faqpatent-e.html\n //\n //---------------------------------------------------------------------\n\n //---------------------------------------------------------------------\n // QR8bitByte\n //---------------------------------------------------------------------\n\n function QR8bitByte(data) {\n     this.mode = QRMode.MODE_8BIT_BYTE;\n     this.data = data;\n }\n\n QR8bitByte.prototype = {\n\n     getLength: function (buffer) {\n         return this.data.length;\n     },\n\n     write: function (buffer) {\n         for (let i = 0; i < this.data.length; i++) {\n             // not JIS ...\n             buffer.put(this.data.charCodeAt(i), 8);\n         }\n     }\n };\n\n //---------------------------------------------------------------------\n // QRCode\n //---------------------------------------------------------------------\n\n let QRCode = function (typeNumber, errorCorrectLevel) {\n     this.typeNumber = typeNumber;\n     this.errorCorrectLevel = errorCorrectLevel;\n     this.modules = null;\n     this.moduleCount = 0;\n     this.dataCache = null;\n     this.dataList = new Array();\n }\n\n QRCode.prototype = {\n\n     addData: function (data) {\n         let newData = new QR8bitByte(data);\n         this.dataList.push(newData);\n         this.dataCache = null;\n     },\n\n     isDark: function (row, col) {\n         if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n             throw new Error(row + \",\" + col);\n         }\n         return this.modules[row][col];\n     },\n\n     getModuleCount: function () {\n         return this.moduleCount;\n     },\n\n     make: function () {\n         // Calculate automatically typeNumber if provided is < 1\n         if (this.typeNumber < 1) {\n             let typeNumber = 1;\n             for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n                 let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n                 let buffer = new QRBitBuffer();\n                 let totalDataCount = 0;\n                 for (let i = 0; i < rsBlocks.length; i++) {\n                     totalDataCount += rsBlocks[i].dataCount;\n                 }\n\n                 for (let i = 0; i < this.dataList.length; i++) {\n                     let data = this.dataList[i];\n                     buffer.put(data.mode, 4);\n                     buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n                     data.write(buffer);\n                 }\n                 if (buffer.getLengthInBits() <= totalDataCount * 8)\n                     break;\n             }\n             this.typeNumber = typeNumber;\n         }\n         this.makeImpl(false, this.getBestMaskPattern());\n     },\n\n     makeImpl: function (test, maskPattern) {\n\n         this.moduleCount = this.typeNumber * 4 + 17;\n         this.modules = new Array(this.moduleCount);\n\n         for (let row = 0; row < this.moduleCount; row++) {\n\n             this.modules[row] = new Array(this.moduleCount);\n\n             for (let col = 0; col < this.moduleCount; col++) {\n                 this.modules[row][col] = null;//(col + row) % 3;\n             }\n         }\n\n         this.setupPositionProbePattern(0, 0);\n         this.setupPositionProbePattern(this.moduleCount - 7, 0);\n         this.setupPositionProbePattern(0, this.moduleCount - 7);\n         this.setupPositionAdjustPattern();\n         this.setupTimingPattern();\n         this.setupTypeInfo(test, maskPattern);\n\n         if (this.typeNumber >= 7) {\n             this.setupTypeNumber(test);\n         }\n\n         if (this.dataCache == null) {\n             this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n         }\n\n         this.mapData(this.dataCache, maskPattern);\n     },\n\n     setupPositionProbePattern: function (row, col) {\n\n         for (let r = -1; r <= 7; r++) {\n\n             if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n             for (let c = -1; c <= 7; c++) {\n\n                 if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n                 if ((0 <= r && r <= 6 && (c == 0 || c == 6))\n                     || (0 <= c && c <= 6 && (r == 0 || r == 6))\n                     || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                     this.modules[row + r][col + c] = true;\n                 } else {\n                     this.modules[row + r][col + c] = false;\n                 }\n             }\n         }\n     },\n\n     getBestMaskPattern: function () {\n\n         let minLostPoint = 0;\n         let pattern = 0;\n\n         for (let i = 0; i < 8; i++) {\n\n             this.makeImpl(true, i);\n\n             let lostPoint = QRUtil.getLostPoint(this);\n\n             if (i == 0 || minLostPoint > lostPoint) {\n                 minLostPoint = lostPoint;\n                 pattern = i;\n             }\n         }\n\n         return pattern;\n     },\n\n     createMovieClip: function (target_mc, instance_name, depth) {\n\n         let qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n         let cs = 1;\n\n         this.make();\n\n         for (let row = 0; row < this.modules.length; row++) {\n\n             let y = row * cs;\n\n             for (let col = 0; col < this.modules[row].length; col++) {\n\n                 let x = col * cs;\n                 let dark = this.modules[row][col];\n\n                 if (dark) {\n                     qr_mc.beginFill(0, 100);\n                     qr_mc.moveTo(x, y);\n                     qr_mc.lineTo(x + cs, y);\n                     qr_mc.lineTo(x + cs, y + cs);\n                     qr_mc.lineTo(x, y + cs);\n                     qr_mc.endFill();\n                 }\n             }\n         }\n\n         return qr_mc;\n     },\n\n     setupTimingPattern: function () {\n\n         for (let r = 8; r < this.moduleCount - 8; r++) {\n             if (this.modules[r][6] != null) {\n                 continue;\n             }\n             this.modules[r][6] = (r % 2 == 0);\n         }\n\n         for (let c = 8; c < this.moduleCount - 8; c++) {\n             if (this.modules[6][c] != null) {\n                 continue;\n             }\n             this.modules[6][c] = (c % 2 == 0);\n         }\n     },\n\n     setupPositionAdjustPattern: function () {\n\n         let pos = QRUtil.getPatternPosition(this.typeNumber);\n\n         for (let i = 0; i < pos.length; i++) {\n\n             for (let j = 0; j < pos.length; j++) {\n\n                 let row = pos[i];\n                 let col = pos[j];\n\n                 if (this.modules[row][col] != null) {\n                     continue;\n                 }\n\n                 for (let r = -2; r <= 2; r++) {\n\n                     for (let c = -2; c <= 2; c++) {\n\n                         if (r == -2 || r == 2 || c == -2 || c == 2\n                             || (r == 0 && c == 0)) {\n                             this.modules[row + r][col + c] = true;\n                         } else {\n                             this.modules[row + r][col + c] = false;\n                         }\n                     }\n                 }\n             }\n         }\n     },\n\n     setupTypeNumber: function (test) {\n\n         let bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\n         for (let i = 0; i < 18; i++) {\n             let mod = (!test && ((bits >> i) & 1) == 1);\n             this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n         }\n\n         for (let i = 0; i < 18; i++) {\n             let mod = (!test && ((bits >> i) & 1) == 1);\n             this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n         }\n     },\n\n     setupTypeInfo: function (test, maskPattern) {\n\n         let data = (this.errorCorrectLevel << 3) | maskPattern;\n         let bits = QRUtil.getBCHTypeInfo(data);\n\n         // vertical\t\t\n         for (let i = 0; i < 15; i++) {\n\n             let mod = (!test && ((bits >> i) & 1) == 1);\n\n             if (i < 6) {\n                 this.modules[i][8] = mod;\n             } else if (i < 8) {\n                 this.modules[i + 1][8] = mod;\n             } else {\n                 this.modules[this.moduleCount - 15 + i][8] = mod;\n             }\n         }\n\n         // horizontal\n         for (let i = 0; i < 15; i++) {\n\n             let mod = (!test && ((bits >> i) & 1) == 1);\n\n             if (i < 8) {\n                 this.modules[8][this.moduleCount - i - 1] = mod;\n             } else if (i < 9) {\n                 this.modules[8][15 - i - 1 + 1] = mod;\n             } else {\n                 this.modules[8][15 - i - 1] = mod;\n             }\n         }\n\n         // fixed module\n         this.modules[this.moduleCount - 8][8] = (!test);\n\n     },\n\n     mapData: function (data, maskPattern) {\n\n         let inc = -1;\n         let row = this.moduleCount - 1;\n         let bitIndex = 7;\n         let byteIndex = 0;\n\n         for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n\n             if (col == 6) col--;\n\n             while (true) {\n\n                 for (let c = 0; c < 2; c++) {\n\n                     if (this.modules[row][col - c] == null) {\n\n                         let dark = false;\n\n                         if (byteIndex < data.length) {\n                             dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n                         }\n\n                         let mask = QRUtil.getMask(maskPattern, row, col - c);\n\n                         if (mask) {\n                             dark = !dark;\n                         }\n\n                         this.modules[row][col - c] = dark;\n                         bitIndex--;\n\n                         if (bitIndex == -1) {\n                             byteIndex++;\n                             bitIndex = 7;\n                         }\n                     }\n                 }\n\n                 row += inc;\n\n                 if (row < 0 || this.moduleCount <= row) {\n                     row -= inc;\n                     inc = -inc;\n                     break;\n                 }\n             }\n         }\n\n     }\n\n };\n\n QRCode.PAD0 = 0xEC;\n QRCode.PAD1 = 0x11;\n\n QRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n\n     let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\n     let buffer = new QRBitBuffer();\n\n     for (let i = 0; i < dataList.length; i++) {\n         let data = dataList[i];\n         buffer.put(data.mode, 4);\n         buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n         data.write(buffer);\n     }\n\n     // calc num max data.\n     let totalDataCount = 0;\n     for (let i = 0; i < rsBlocks.length; i++) {\n         totalDataCount += rsBlocks[i].dataCount;\n     }\n\n     if (buffer.getLengthInBits() > totalDataCount * 8) {\n         throw new Error(\"code length overflow. (\"\n             + buffer.getLengthInBits()\n             + \">\"\n             + totalDataCount * 8\n             + \")\");\n     }\n\n     // end code\n     if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n         buffer.put(0, 4);\n     }\n\n     // padding\n     while (buffer.getLengthInBits() % 8 != 0) {\n         buffer.putBit(false);\n     }\n\n     // padding\n     while (true) {\n\n         if (buffer.getLengthInBits() >= totalDataCount * 8) {\n             break;\n         }\n         buffer.put(QRCode.PAD0, 8);\n\n         if (buffer.getLengthInBits() >= totalDataCount * 8) {\n             break;\n         }\n         buffer.put(QRCode.PAD1, 8);\n     }\n\n     return QRCode.createBytes(buffer, rsBlocks);\n }\n\n QRCode.createBytes = function (buffer, rsBlocks) {\n\n     let offset = 0;\n\n     let maxDcCount = 0;\n     let maxEcCount = 0;\n\n     let dcdata = new Array(rsBlocks.length);\n     let ecdata = new Array(rsBlocks.length);\n\n     for (let r = 0; r < rsBlocks.length; r++) {\n\n         let dcCount = rsBlocks[r].dataCount;\n         let ecCount = rsBlocks[r].totalCount - dcCount;\n\n         maxDcCount = Math.max(maxDcCount, dcCount);\n         maxEcCount = Math.max(maxEcCount, ecCount);\n\n         dcdata[r] = new Array(dcCount);\n\n         for (let i = 0; i < dcdata[r].length; i++) {\n             dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n         }\n         offset += dcCount;\n\n         let rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n         let rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n         let modPoly = rawPoly.mod(rsPoly);\n         ecdata[r] = new Array(rsPoly.getLength() - 1);\n         for (let i = 0; i < ecdata[r].length; i++) {\n             let modIndex = i + modPoly.getLength() - ecdata[r].length;\n             ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n         }\n\n     }\n\n     let totalCodeCount = 0;\n     for (let i = 0; i < rsBlocks.length; i++) {\n         totalCodeCount += rsBlocks[i].totalCount;\n     }\n\n     let data = new Array(totalCodeCount);\n     let index = 0;\n\n     for (let i = 0; i < maxDcCount; i++) {\n         for (let r = 0; r < rsBlocks.length; r++) {\n             if (i < dcdata[r].length) {\n                 data[index++] = dcdata[r][i];\n             }\n         }\n     }\n\n     for (let i = 0; i < maxEcCount; i++) {\n         for (let r = 0; r < rsBlocks.length; r++) {\n             if (i < ecdata[r].length) {\n                 data[index++] = ecdata[r][i];\n             }\n         }\n     }\n\n     return data;\n\n }\n\n //---------------------------------------------------------------------\n // QRMode\n //---------------------------------------------------------------------\n\n let QRMode = {\n     MODE_NUMBER: 1 << 0,\n     MODE_ALPHA_NUM: 1 << 1,\n     MODE_8BIT_BYTE: 1 << 2,\n     MODE_KANJI: 1 << 3\n };\n\n //---------------------------------------------------------------------\n // QRErrorCorrectLevel\n //---------------------------------------------------------------------\n\n let QRErrorCorrectLevel = {\n     L: 1,\n     M: 0,\n     Q: 3,\n     H: 2\n };\n\n //---------------------------------------------------------------------\n // QRMaskPattern\n //---------------------------------------------------------------------\n\n let QRMaskPattern = {\n     PATTERN000: 0,\n     PATTERN001: 1,\n     PATTERN010: 2,\n     PATTERN011: 3,\n     PATTERN100: 4,\n     PATTERN101: 5,\n     PATTERN110: 6,\n     PATTERN111: 7\n };\n\n //---------------------------------------------------------------------\n // QRUtil\n //---------------------------------------------------------------------\n\n let QRUtil = {\n\n     PATTERN_POSITION_TABLE: [\n         [],\n         [6, 18],\n         [6, 22],\n         [6, 26],\n         [6, 30],\n         [6, 34],\n         [6, 22, 38],\n         [6, 24, 42],\n         [6, 26, 46],\n         [6, 28, 50],\n         [6, 30, 54],\n         [6, 32, 58],\n         [6, 34, 62],\n         [6, 26, 46, 66],\n         [6, 26, 48, 70],\n         [6, 26, 50, 74],\n         [6, 30, 54, 78],\n         [6, 30, 56, 82],\n         [6, 30, 58, 86],\n         [6, 34, 62, 90],\n         [6, 28, 50, 72, 94],\n         [6, 26, 50, 74, 98],\n         [6, 30, 54, 78, 102],\n         [6, 28, 54, 80, 106],\n         [6, 32, 58, 84, 110],\n         [6, 30, 58, 86, 114],\n         [6, 34, 62, 90, 118],\n         [6, 26, 50, 74, 98, 122],\n         [6, 30, 54, 78, 102, 126],\n         [6, 26, 52, 78, 104, 130],\n         [6, 30, 56, 82, 108, 134],\n         [6, 34, 60, 86, 112, 138],\n         [6, 30, 58, 86, 114, 142],\n         [6, 34, 62, 90, 118, 146],\n         [6, 30, 54, 78, 102, 126, 150],\n         [6, 24, 50, 76, 102, 128, 154],\n         [6, 28, 54, 80, 106, 132, 158],\n         [6, 32, 58, 84, 110, 136, 162],\n         [6, 26, 54, 82, 110, 138, 166],\n         [6, 30, 58, 86, 114, 142, 170]\n     ],\n\n     G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n     G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n     G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n\n     getBCHTypeInfo: function (data) {\n         let d = data << 10;\n         while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n             d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n         }\n         return ((data << 10) | d) ^ QRUtil.G15_MASK;\n     },\n\n     getBCHTypeNumber: function (data) {\n         let d = data << 12;\n         while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n             d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n         }\n         return (data << 12) | d;\n     },\n\n     getBCHDigit: function (data) {\n\n         let digit = 0;\n\n         while (data != 0) {\n             digit++;\n             data >>>= 1;\n         }\n\n         return digit;\n     },\n\n     getPatternPosition: function (typeNumber) {\n         return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n     },\n\n     getMask: function (maskPattern, i, j) {\n\n         switch (maskPattern) {\n\n             case QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\n             case QRMaskPattern.PATTERN001: return i % 2 == 0;\n             case QRMaskPattern.PATTERN010: return j % 3 == 0;\n             case QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\n             case QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n             case QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\n             case QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n             case QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n             default:\n                 throw new Error(\"bad maskPattern:\" + maskPattern);\n         }\n     },\n\n     getErrorCorrectPolynomial: function (errorCorrectLength) {\n\n         let a = new QRPolynomial([1], 0);\n\n         for (let i = 0; i < errorCorrectLength; i++) {\n             a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n         }\n\n         return a;\n     },\n\n     getLengthInBits: function (mode, type) {\n\n         if (1 <= type && type < 10) {\n\n             // 1 - 9\n\n             switch (mode) {\n                 case QRMode.MODE_NUMBER: return 10;\n                 case QRMode.MODE_ALPHA_NUM: return 9;\n                 case QRMode.MODE_8BIT_BYTE: return 8;\n                 case QRMode.MODE_KANJI: return 8;\n                 default:\n                     throw new Error(\"mode:\" + mode);\n             }\n\n         } else if (type < 27) {\n\n             // 10 - 26\n\n             switch (mode) {\n                 case QRMode.MODE_NUMBER: return 12;\n                 case QRMode.MODE_ALPHA_NUM: return 11;\n                 case QRMode.MODE_8BIT_BYTE: return 16;\n                 case QRMode.MODE_KANJI: return 10;\n                 default:\n                     throw new Error(\"mode:\" + mode);\n             }\n\n         } else if (type < 41) {\n\n             // 27 - 40\n\n             switch (mode) {\n                 case QRMode.MODE_NUMBER: return 14;\n                 case QRMode.MODE_ALPHA_NUM: return 13;\n                 case QRMode.MODE_8BIT_BYTE: return 16;\n                 case QRMode.MODE_KANJI: return 12;\n                 default:\n                     throw new Error(\"mode:\" + mode);\n             }\n\n         } else {\n             throw new Error(\"type:\" + type);\n         }\n     },\n\n     getLostPoint: function (qrCode) {\n\n         let moduleCount = qrCode.getModuleCount();\n\n         let lostPoint = 0;\n\n         // LEVEL1\n\n         for (let row = 0; row < moduleCount; row++) {\n\n             for (let col = 0; col < moduleCount; col++) {\n\n                 let sameCount = 0;\n                 let dark = qrCode.isDark(row, col);\n\n                 for (let r = -1; r <= 1; r++) {\n\n                     if (row + r < 0 || moduleCount <= row + r) {\n                         continue;\n                     }\n\n                     for (let c = -1; c <= 1; c++) {\n\n                         if (col + c < 0 || moduleCount <= col + c) {\n                             continue;\n                         }\n\n                         if (r == 0 && c == 0) {\n                             continue;\n                         }\n\n                         if (dark == qrCode.isDark(row + r, col + c)) {\n                             sameCount++;\n                         }\n                     }\n                 }\n\n                 if (sameCount > 5) {\n                     lostPoint += (3 + sameCount - 5);\n                 }\n             }\n         }\n\n         // LEVEL2\n\n         for (let row = 0; row < moduleCount - 1; row++) {\n             for (let col = 0; col < moduleCount - 1; col++) {\n                 let count = 0;\n                 if (qrCode.isDark(row, col)) count++;\n                 if (qrCode.isDark(row + 1, col)) count++;\n                 if (qrCode.isDark(row, col + 1)) count++;\n                 if (qrCode.isDark(row + 1, col + 1)) count++;\n                 if (count == 0 || count == 4) {\n                     lostPoint += 3;\n                 }\n             }\n         }\n\n         // LEVEL3\n\n         for (let row = 0; row < moduleCount; row++) {\n             for (let col = 0; col < moduleCount - 6; col++) {\n                 if (qrCode.isDark(row, col)\n                     && !qrCode.isDark(row, col + 1)\n                     && qrCode.isDark(row, col + 2)\n                     && qrCode.isDark(row, col + 3)\n                     && qrCode.isDark(row, col + 4)\n                     && !qrCode.isDark(row, col + 5)\n                     && qrCode.isDark(row, col + 6)) {\n                     lostPoint += 40;\n                 }\n             }\n         }\n\n         for (let col = 0; col < moduleCount; col++) {\n             for (let row = 0; row < moduleCount - 6; row++) {\n                 if (qrCode.isDark(row, col)\n                     && !qrCode.isDark(row + 1, col)\n                     && qrCode.isDark(row + 2, col)\n                     && qrCode.isDark(row + 3, col)\n                     && qrCode.isDark(row + 4, col)\n                     && !qrCode.isDark(row + 5, col)\n                     && qrCode.isDark(row + 6, col)) {\n                     lostPoint += 40;\n                 }\n             }\n         }\n\n         // LEVEL4\n\n         let darkCount = 0;\n\n         for (let col = 0; col < moduleCount; col++) {\n             for (let row = 0; row < moduleCount; row++) {\n                 if (qrCode.isDark(row, col)) {\n                     darkCount++;\n                 }\n             }\n         }\n\n         let ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n         lostPoint += ratio * 10;\n\n         return lostPoint;\n     }\n\n };\n\n\n //---------------------------------------------------------------------\n // QRMath\n //---------------------------------------------------------------------\n\n let QRMath = {\n\n     glog: function (n) {\n\n         if (n < 1) {\n             throw new Error(\"glog(\" + n + \")\");\n         }\n\n         return QRMath.LOG_TABLE[n];\n     },\n\n     gexp: function (n) {\n\n         while (n < 0) {\n             n += 255;\n         }\n\n         while (n >= 256) {\n             n -= 255;\n         }\n\n         return QRMath.EXP_TABLE[n];\n     },\n\n     EXP_TABLE: new Array(256),\n\n     LOG_TABLE: new Array(256)\n\n };\n\n for (let i = 0; i < 8; i++) {\n     QRMath.EXP_TABLE[i] = 1 << i;\n }\n for (let i = 8; i < 256; i++) {\n     QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n         ^ QRMath.EXP_TABLE[i - 5]\n         ^ QRMath.EXP_TABLE[i - 6]\n         ^ QRMath.EXP_TABLE[i - 8];\n }\n for (let i = 0; i < 255; i++) {\n     QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n }\n\n //---------------------------------------------------------------------\n // QRPolynomial\n //---------------------------------------------------------------------\n\n function QRPolynomial(num, shift) {\n\n     if (num.length == undefined) {\n         throw new Error(num.length + \"/\" + shift);\n     }\n\n     let offset = 0;\n\n     while (offset < num.length && num[offset] == 0) {\n         offset++;\n     }\n\n     this.num = new Array(num.length - offset + shift);\n     for (let i = 0; i < num.length - offset; i++) {\n         this.num[i] = num[i + offset];\n     }\n }\n\n QRPolynomial.prototype = {\n\n     get: function (index) {\n         return this.num[index];\n     },\n\n     getLength: function () {\n         return this.num.length;\n     },\n\n     multiply: function (e) {\n\n         let num = new Array(this.getLength() + e.getLength() - 1);\n\n         for (let i = 0; i < this.getLength(); i++) {\n             for (let j = 0; j < e.getLength(); j++) {\n                 num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n             }\n         }\n\n         return new QRPolynomial(num, 0);\n     },\n\n     mod: function (e) {\n\n         if (this.getLength() - e.getLength() < 0) {\n             return this;\n         }\n\n         let ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n\n         let num = new Array(this.getLength());\n\n         for (let i = 0; i < this.getLength(); i++) {\n             num[i] = this.get(i);\n         }\n\n         for (let i = 0; i < e.getLength(); i++) {\n             num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n         }\n\n         // recursive call\n         return new QRPolynomial(num, 0).mod(e);\n     }\n };\n\n //---------------------------------------------------------------------\n // QRRSBlock\n //---------------------------------------------------------------------\n\n function QRRSBlock(totalCount, dataCount) {\n     this.totalCount = totalCount;\n     this.dataCount = dataCount;\n }\n\n QRRSBlock.RS_BLOCK_TABLE = [\n\n     // L\n     // M\n     // Q\n     // H\n\n     // 1\n     [1, 26, 19],\n     [1, 26, 16],\n     [1, 26, 13],\n     [1, 26, 9],\n\n     // 2\n     [1, 44, 34],\n     [1, 44, 28],\n     [1, 44, 22],\n     [1, 44, 16],\n\n     // 3\n     [1, 70, 55],\n     [1, 70, 44],\n     [2, 35, 17],\n     [2, 35, 13],\n\n     // 4\t\t\n     [1, 100, 80],\n     [2, 50, 32],\n     [2, 50, 24],\n     [4, 25, 9],\n\n     // 5\n     [1, 134, 108],\n     [2, 67, 43],\n     [2, 33, 15, 2, 34, 16],\n     [2, 33, 11, 2, 34, 12],\n\n     // 6\n     [2, 86, 68],\n     [4, 43, 27],\n     [4, 43, 19],\n     [4, 43, 15],\n\n     // 7\t\t\n     [2, 98, 78],\n     [4, 49, 31],\n     [2, 32, 14, 4, 33, 15],\n     [4, 39, 13, 1, 40, 14],\n\n     // 8\n     [2, 121, 97],\n     [2, 60, 38, 2, 61, 39],\n     [4, 40, 18, 2, 41, 19],\n     [4, 40, 14, 2, 41, 15],\n\n     // 9\n     [2, 146, 116],\n     [3, 58, 36, 2, 59, 37],\n     [4, 36, 16, 4, 37, 17],\n     [4, 36, 12, 4, 37, 13],\n\n     // 10\t\t\n     [2, 86, 68, 2, 87, 69],\n     [4, 69, 43, 1, 70, 44],\n     [6, 43, 19, 2, 44, 20],\n     [6, 43, 15, 2, 44, 16],\n\n     // 11\n     [4, 101, 81],\n     [1, 80, 50, 4, 81, 51],\n     [4, 50, 22, 4, 51, 23],\n     [3, 36, 12, 8, 37, 13],\n\n     // 12\n     [2, 116, 92, 2, 117, 93],\n     [6, 58, 36, 2, 59, 37],\n     [4, 46, 20, 6, 47, 21],\n     [7, 42, 14, 4, 43, 15],\n\n     // 13\n     [4, 133, 107],\n     [8, 59, 37, 1, 60, 38],\n     [8, 44, 20, 4, 45, 21],\n     [12, 33, 11, 4, 34, 12],\n\n     // 14\n     [3, 145, 115, 1, 146, 116],\n     [4, 64, 40, 5, 65, 41],\n     [11, 36, 16, 5, 37, 17],\n     [11, 36, 12, 5, 37, 13],\n\n     // 15\n     [5, 109, 87, 1, 110, 88],\n     [5, 65, 41, 5, 66, 42],\n     [5, 54, 24, 7, 55, 25],\n     [11, 36, 12],\n\n     // 16\n     [5, 122, 98, 1, 123, 99],\n     [7, 73, 45, 3, 74, 46],\n     [15, 43, 19, 2, 44, 20],\n     [3, 45, 15, 13, 46, 16],\n\n     // 17\n     [1, 135, 107, 5, 136, 108],\n     [10, 74, 46, 1, 75, 47],\n     [1, 50, 22, 15, 51, 23],\n     [2, 42, 14, 17, 43, 15],\n\n     // 18\n     [5, 150, 120, 1, 151, 121],\n     [9, 69, 43, 4, 70, 44],\n     [17, 50, 22, 1, 51, 23],\n     [2, 42, 14, 19, 43, 15],\n\n     // 19\n     [3, 141, 113, 4, 142, 114],\n     [3, 70, 44, 11, 71, 45],\n     [17, 47, 21, 4, 48, 22],\n     [9, 39, 13, 16, 40, 14],\n\n     // 20\n     [3, 135, 107, 5, 136, 108],\n     [3, 67, 41, 13, 68, 42],\n     [15, 54, 24, 5, 55, 25],\n     [15, 43, 15, 10, 44, 16],\n\n     // 21\n     [4, 144, 116, 4, 145, 117],\n     [17, 68, 42],\n     [17, 50, 22, 6, 51, 23],\n     [19, 46, 16, 6, 47, 17],\n\n     // 22\n     [2, 139, 111, 7, 140, 112],\n     [17, 74, 46],\n     [7, 54, 24, 16, 55, 25],\n     [34, 37, 13],\n\n     // 23\n     [4, 151, 121, 5, 152, 122],\n     [4, 75, 47, 14, 76, 48],\n     [11, 54, 24, 14, 55, 25],\n     [16, 45, 15, 14, 46, 16],\n\n     // 24\n     [6, 147, 117, 4, 148, 118],\n     [6, 73, 45, 14, 74, 46],\n     [11, 54, 24, 16, 55, 25],\n     [30, 46, 16, 2, 47, 17],\n\n     // 25\n     [8, 132, 106, 4, 133, 107],\n     [8, 75, 47, 13, 76, 48],\n     [7, 54, 24, 22, 55, 25],\n     [22, 45, 15, 13, 46, 16],\n\n     // 26\n     [10, 142, 114, 2, 143, 115],\n     [19, 74, 46, 4, 75, 47],\n     [28, 50, 22, 6, 51, 23],\n     [33, 46, 16, 4, 47, 17],\n\n     // 27\n     [8, 152, 122, 4, 153, 123],\n     [22, 73, 45, 3, 74, 46],\n     [8, 53, 23, 26, 54, 24],\n     [12, 45, 15, 28, 46, 16],\n\n     // 28\n     [3, 147, 117, 10, 148, 118],\n     [3, 73, 45, 23, 74, 46],\n     [4, 54, 24, 31, 55, 25],\n     [11, 45, 15, 31, 46, 16],\n\n     // 29\n     [7, 146, 116, 7, 147, 117],\n     [21, 73, 45, 7, 74, 46],\n     [1, 53, 23, 37, 54, 24],\n     [19, 45, 15, 26, 46, 16],\n\n     // 30\n     [5, 145, 115, 10, 146, 116],\n     [19, 75, 47, 10, 76, 48],\n     [15, 54, 24, 25, 55, 25],\n     [23, 45, 15, 25, 46, 16],\n\n     // 31\n     [13, 145, 115, 3, 146, 116],\n     [2, 74, 46, 29, 75, 47],\n     [42, 54, 24, 1, 55, 25],\n     [23, 45, 15, 28, 46, 16],\n\n     // 32\n     [17, 145, 115],\n     [10, 74, 46, 23, 75, 47],\n     [10, 54, 24, 35, 55, 25],\n     [19, 45, 15, 35, 46, 16],\n\n     // 33\n     [17, 145, 115, 1, 146, 116],\n     [14, 74, 46, 21, 75, 47],\n     [29, 54, 24, 19, 55, 25],\n     [11, 45, 15, 46, 46, 16],\n\n     // 34\n     [13, 145, 115, 6, 146, 116],\n     [14, 74, 46, 23, 75, 47],\n     [44, 54, 24, 7, 55, 25],\n     [59, 46, 16, 1, 47, 17],\n\n     // 35\n     [12, 151, 121, 7, 152, 122],\n     [12, 75, 47, 26, 76, 48],\n     [39, 54, 24, 14, 55, 25],\n     [22, 45, 15, 41, 46, 16],\n\n     // 36\n     [6, 151, 121, 14, 152, 122],\n     [6, 75, 47, 34, 76, 48],\n     [46, 54, 24, 10, 55, 25],\n     [2, 45, 15, 64, 46, 16],\n\n     // 37\n     [17, 152, 122, 4, 153, 123],\n     [29, 74, 46, 14, 75, 47],\n     [49, 54, 24, 10, 55, 25],\n     [24, 45, 15, 46, 46, 16],\n\n     // 38\n     [4, 152, 122, 18, 153, 123],\n     [13, 74, 46, 32, 75, 47],\n     [48, 54, 24, 14, 55, 25],\n     [42, 45, 15, 32, 46, 16],\n\n     // 39\n     [20, 147, 117, 4, 148, 118],\n     [40, 75, 47, 7, 76, 48],\n     [43, 54, 24, 22, 55, 25],\n     [10, 45, 15, 67, 46, 16],\n\n     // 40\n     [19, 148, 118, 6, 149, 119],\n     [18, 75, 47, 31, 76, 48],\n     [34, 54, 24, 34, 55, 25],\n     [20, 45, 15, 61, 46, 16]\n ];\n\n QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n\n     let rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n     if (rsBlock == undefined) {\n         throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n     }\n\n     let length = rsBlock.length / 3;\n\n     let list = new Array();\n\n     for (let i = 0; i < length; i++) {\n\n         let count = rsBlock[i * 3 + 0];\n         let totalCount = rsBlock[i * 3 + 1];\n         let dataCount = rsBlock[i * 3 + 2];\n\n         for (let j = 0; j < count; j++) {\n             list.push(new QRRSBlock(totalCount, dataCount));\n         }\n     }\n\n     return list;\n }\n\n QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n\n     switch (errorCorrectLevel) {\n         case QRErrorCorrectLevel.L:\n             return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n         case QRErrorCorrectLevel.M:\n             return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n         case QRErrorCorrectLevel.Q:\n             return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n         case QRErrorCorrectLevel.H:\n             return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n         default:\n             return undefined;\n     }\n }\n\n //---------------------------------------------------------------------\n // QRBitBuffer\n //---------------------------------------------------------------------\n\n function QRBitBuffer() {\n     this.buffer = new Array();\n     this.length = 0;\n }\n\n QRBitBuffer.prototype = {\n\n     get: function (index) {\n         let bufIndex = Math.floor(index / 8);\n         return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\n     },\n\n     put: function (num, length) {\n         for (let i = 0; i < length; i++) {\n             this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n         }\n     },\n\n     getLengthInBits: function () {\n         return this.length;\n     },\n\n     putBit: function (bit) {\n\n         let bufIndex = Math.floor(this.length / 8);\n         if (this.buffer.length <= bufIndex) {\n             this.buffer.push(0);\n         }\n\n         if (bit) {\n             this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n         }\n\n         this.length++;\n     }\n };\n\n /**\n  * 二维码组件\n  */\n let CQRCode = cc.Class({\n     extends: cc.Graphics,\n     properties: {\n         string: {\n             default: 'Hello World!',\n             notify(oldValue) {\n                 if (this.string === oldValue) {\n                     return;\n                 }\n                 this.setContent();\n             },\n         },\n\n         backColor: {\n             type: cc.Color,\n             default: cc.Color.WHITE,\n             notify() {\n                 this.setContent();\n             },\n         },\n\n         foreColor: {\n             type: cc.Color,\n             default: cc.Color.BLACK,\n             notify(old) {\n                 this.node.color = this.foreColor;\n                 this.setContent();\n             },\n         },\n\n         margin: {\n             type: cc.Float,\n             default: 10,\n             notify(old) {\n                 if (old === this.margin) {\n                     return;\n                 }\n                 this.setContent();\n             }\n         },\n\n         _size: 200,\n         size: {\n             type: cc.Float,\n             get() {\n                 return this._size;\n             },\n\n             set(value) {\n                 if (this._size === value) {\n                     return;\n                 }\n                 \n                 this.node.setContentSize(value, value);\n                 this.setContent();\n                 this._size = value;\n             },\n         }\n     },\n\n     onLoad() {\n         this.node.setContentSize(this._size, this._size);\n         this.setContent();\n     },\n\n     setContent() {\n         this.clear();\n         //背景色\n         this.fillColor = this.backColor;\n         let width = this.node.width;\n         let offsetX = -width * this.node.anchorX;\n         let offsetY = -width * this.node.anchorY;\n         this.rect(offsetX, offsetY, width, width);\n         this.fill();\n         this.close();\n         //生成二维码数据\n         let qrcode = new QRCode(-1, 2);\n         qrcode.addData(this.string);\n         qrcode.make();\n         this.fillColor = this.foreColor;\n         let size = width - this.margin * 2;\n         let num = qrcode.getModuleCount();\n         \n         let tileW = size / num;\n         let tileH = size / num;\n         let w = Math.ceil(tileW);\n         let h = Math.ceil(tileH);\n         for (let row = 0; row < num; row++) {\n             for (let col = 0; col < num; col++) {\n                 if (qrcode.isDark(row, col)) {\n                     this.rect(offsetX + this.margin + col * tileW, offsetX + size - tileH - Math.round(row * tileH) + this.margin, w, h);\n                     this.fill();\n                 }\n             }\n         }\n     },\n\n     \n });\n\n cc.Class.Attr.setClassAttr(CQRCode, 'lineWidth', 'visible', false);\n cc.Class.Attr.setClassAttr(CQRCode, 'lineJoin', 'visible', false);\n cc.Class.Attr.setClassAttr(CQRCode, 'lineCap', 'visible', false);\n cc.Class.Attr.setClassAttr(CQRCode, 'strokeColor', 'visible', false);\n cc.Class.Attr.setClassAttr(CQRCode, 'miterLimit', 'visible', false);\n cc.Class.Attr.setClassAttr(CQRCode, 'fillColor', 'visible', false);\n\n module.exports = CQRCode;\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}