{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/test.ts"],"names":["_decorator","Component","QRCode","QRErrorCorrectLevel","ccclass","property","test","start","ctx","node","getComponent","cc","Graphics","QRCreate","url","qrcode","H","addData","make","fillColor","Color","BLACK","roll","Math","floor","getModuleCount","tileW","UITransform","width","tileH","height","row","col","isDark","w","ceil","h","posx","round","posy","rect","WHITE","fill","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { QRCode, QRErrorCorrectLevel } from \"./QRCode\";\nimport * as cc from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"test\")\nexport class test extends Component {\n  start() {\n    // let qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    // console.error(qrcode);\n    // qrcode.addData(\"www.baidu.com\");\n    // qrcode.make();\n    // console.error(qrcode);\n    let ctx = this.node.getComponent(cc.Graphics);\n    this.QRCreate(\n      ctx,\n      \"https://docs.cocos.com/creator/3.6/manual/zh/ui-system/components/editor/graphics.html\"\n    );\n  }\n\n  QRCreate(ctx, url) {\n    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    qrcode.addData(url);\n    qrcode.make();\n\n    ctx.fillColor = cc.Color.BLACK;\n    let roll = Math.floor(qrcode.getModuleCount());\n    //块宽高\n    var tileW = this.node.getComponent(cc.UITransform).width / roll;\n    var tileH = this.node.getComponent(cc.UITransform).height / roll;\n\n    // draw in the Graphics\n    for (var row = 0; row < qrcode.getModuleCount(); row++) {\n      for (var col = 0; col < qrcode.getModuleCount(); col++) {\n        if (qrcode.isDark(row, col)) {\n          //   ctx.fillColor = cc.Color.WHITE;\n          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n\n          let posx =\n            Math.round(col * tileW) -\n            this.node.getComponent(cc.UITransform).width / 2;\n          let posy =\n            Math.round(row * tileH) -\n            this.node.getComponent(cc.UITransform).height / 2;\n          ctx.rect(posx, posy, tileW+0.5, tileH + 0.5);\n          ctx.fillColor = cc.Color.WHITE;\n          ctx.fill();\n        }\n      }\n    }\n    // ctx.stroke();\n  }\n\n  update(deltaTime: number) {}\n}\n"]}