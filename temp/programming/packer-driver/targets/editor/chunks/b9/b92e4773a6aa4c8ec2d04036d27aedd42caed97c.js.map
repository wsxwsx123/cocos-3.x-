{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/QRCode.ts"],"names":["QRCode","QRUtil","QR8bitByte","QRBitBuffer","QRRSBlock","QRPolynomial","QRErrorCorrectLevel","constructor","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","addData","data","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","getRSBlocks","buffer","totalDataCount","i","length","dataCount","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","targetMc","instanceName","depth","qrMc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","putBit","PAD0","PAD1","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","createCanvas","options","opt","Object","assign","width","height","correctLevel","H","background","foreground","qrcode","text","canvas","document","createElement","ctx","getContext","tileW","tileH","fillStyle","w","ceil","h","fillRect","round","setCanvas","id","parent","getElementById","innerHTML","appendChild"],"mappings":"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","sourcesContent":["import { QRUtil } from './QRUtil'\nimport QR8bitByte from './QR8bitByte'\nimport QRBitBuffer from './QRBitBuffer'\nimport QRRSBlock from './QRRSBlock'\nimport QRPolynomial from './QRPolynomial'\nimport { QRErrorCorrectLevel } from './constants'\nexport { QRErrorCorrectLevel } from './constants'\n\nexport class QRCode {\n  typeNumber: number\n  errorCorrectLevel: number\n  modules: boolean[][]\n  moduleCount: number\n  dataCache: any\n  dataList: QR8bitByte[]\n\n  constructor (typeNumber: number, errorCorrectLevel: number) {\n    this.typeNumber = typeNumber\n    this.errorCorrectLevel = errorCorrectLevel\n    this.modules = null\n    this.moduleCount = 0\n    this.dataCache = null\n    this.dataList = []\n  }\n\n  addData (data: any) {\n    const newData = new QR8bitByte(data)\n    this.dataList.push(newData)\n    this.dataCache = null\n  }\n\n  isDark (row: number, col: number) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col)\n    }\n    return this.modules[row][col]\n  }\n\n  getModuleCount () {\n    return this.moduleCount\n  }\n\n  make () {\n    // Calculate automatically typeNumber if provided is < 1\n    if (this.typeNumber < 1) {\n      let typeNumber\n      for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n        const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel)\n\n        const buffer = new QRBitBuffer()\n        let totalDataCount = 0\n        for (let i = 0; i < rsBlocks.length; i++) {\n          totalDataCount += rsBlocks[i].dataCount\n        }\n\n        for (let i = 0; i < this.dataList.length; i++) {\n          const data = this.dataList[i]\n          buffer.put(data.mode, 4)\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber))\n          data.write(buffer)\n        }\n        if (buffer.getLengthInBits() <= totalDataCount * 8) break\n      }\n      this.typeNumber = typeNumber\n    }\n    this.makeImpl(false, this.getBestMaskPattern())\n  }\n\n  makeImpl (test: boolean, maskPattern: number) {\n    this.moduleCount = this.typeNumber * 4 + 17\n    this.modules = new Array(this.moduleCount)\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount)\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null\n      }\n    }\n\n    this.setupPositionProbePattern(0, 0)\n    this.setupPositionProbePattern(this.moduleCount - 7, 0)\n    this.setupPositionProbePattern(0, this.moduleCount - 7)\n    this.setupPositionAdjustPattern()\n    this.setupTimingPattern()\n    this.setupTypeInfo(test, maskPattern)\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test)\n    }\n\n    if (this.dataCache == null) {\n      this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)\n    }\n    this.mapData(this.dataCache, maskPattern)\n  }\n\n  setupPositionProbePattern (row: any, col: any) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue\n        if (\n          (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)\n        ) {\n          this.modules[row + r][col + c] = true\n        } else {\n          this.modules[row + r][col + c] = false\n        }\n      }\n    }\n  }\n\n  getBestMaskPattern () {\n    let minLostPoint = 0\n    let pattern = 0\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i)\n      const lostPoint = QRUtil.getLostPoint(this)\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint\n        pattern = i\n      }\n    }\n    return pattern\n  }\n\n  createMovieClip (targetMc: any, instanceName: any, depth: any) {\n    const qrMc = targetMc.createEmptyMovieClip(instanceName, depth)\n    const cs = 1\n    this.make()\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs\n        const dark = this.modules[row][col]\n        if (dark) {\n          qrMc.beginFill(0, 100)\n          qrMc.moveTo(x, y)\n          qrMc.lineTo(x + cs, y)\n          qrMc.lineTo(x + cs, y + cs)\n          qrMc.lineTo(x, y + cs)\n          qrMc.endFill()\n        }\n      }\n    }\n    return qrMc\n  }\n\n  setupTimingPattern () {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue\n      }\n      this.modules[r][6] = r % 2 === 0\n    }\n\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue\n      }\n      this.modules[6][c] = c % 2 === 0\n    }\n  }\n\n  setupPositionAdjustPattern () {\n    const pos = QRUtil.getPatternPosition(this.typeNumber)\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i]\n        const col = pos[j]\n        if (this.modules[row][col] != null) {\n          continue\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n              this.modules[row + r][col + c] = true\n            } else {\n              this.modules[row + r][col + c] = false\n            }\n          }\n        }\n      }\n    }\n  }\n\n  setupTypeNumber (test: any) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber)\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod\n    }\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod\n    }\n  }\n\n  setupTypeInfo (test: any, maskPattern: any) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern\n    const bits = QRUtil.getBCHTypeInfo(data)\n    // vertical\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1\n      if (i < 6) {\n        this.modules[i][8] = mod\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod\n      }\n    }\n\n    // horizontal\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod\n      } else {\n        this.modules[8][15 - i - 1] = mod\n      }\n    }\n    // fixed module\n    this.modules[this.moduleCount - 8][8] = !test\n  }\n\n  mapData (data: any, maskPattern: any) {\n    let inc = -1\n    let row = this.moduleCount - 1\n    let bitIndex = 7\n    let byteIndex = 0\n\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c)\n            if (mask) {\n              dark = !dark\n            }\n            this.modules[row][col - c] = dark\n            bitIndex--\n            if (bitIndex === -1) {\n              byteIndex++\n              bitIndex = 7\n            }\n          }\n        }\n\n        row += inc\n\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc\n          inc = -inc\n          break\n        }\n      }\n    }\n  }\n\n  static PAD0 = 0xec\n  static PAD1 = 0x11\n\n  static createData (typeNumber: number, errorCorrectLevel: number, dataList: QR8bitByte[]) {\n    const rsBlocks: QRRSBlock[] = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel)\n    const buffer = new QRBitBuffer()\n    for (let i = 0; i < dataList.length; i++) {\n      const data: QR8bitByte = dataList[i]\n      buffer.put(data.mode, 4)\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber))\n      data.write(buffer)\n    }\n    // calc num max data.\n    let totalDataCount = 0\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')')\n    }\n    // end code\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4)\n    }\n    // padding\n    while (buffer.getLengthInBits() % 8 !== 0) {\n      buffer.putBit(false)\n    }\n    // padding\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break\n      }\n      buffer.put(QRCode.PAD0, 8)\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break\n      }\n      buffer.put(QRCode.PAD1, 8)\n    }\n    return QRCode.createBytes(buffer, rsBlocks)\n  }\n\n  static createBytes (buffer: QRBitBuffer, rsBlocks: QRRSBlock[]) {\n    let offset: number = 0\n    let maxDcCount: number = 0\n    let maxEcCount: number = 0\n    const dcdata: number[][] = new Array(rsBlocks.length)\n    const ecdata: number[][] = new Array(rsBlocks.length)\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount: number = rsBlocks[r].dataCount\n      const ecCount: number = rsBlocks[r].totalCount - dcCount\n      maxDcCount = Math.max(maxDcCount, dcCount)\n      maxEcCount = Math.max(maxEcCount, ecCount)\n      dcdata[r] = new Array(dcCount)\n      for (let i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset]\n      }\n      offset += dcCount\n      const rsPoly: QRPolynomial = QRUtil.getErrorCorrectPolynomial(ecCount)\n      const rawPoly: QRPolynomial = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1)\n      const modPoly: QRPolynomial = rawPoly.mod(rsPoly)\n      ecdata[r] = new Array(rsPoly.getLength() - 1)\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex: number = i + modPoly.getLength() - ecdata[r].length\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0\n      }\n    }\n\n    let totalCodeCount: number = 0\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount\n    }\n\n    const data: number[] = new Array(totalCodeCount)\n    let index = 0\n\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i]\n        }\n      }\n    }\n\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i]\n        }\n      }\n    }\n    return data\n  }\n\n  static createCanvas (options: any) {\n    const opt = Object.assign({\n      width: 256,\n      height: 256,\n      correctLevel: QRErrorCorrectLevel.H,\n      background: '#ffffff',\n      foreground: '#000000'\n    }, options)\n    const qrcode = new QRCode(-1, opt.correctLevel)\n    qrcode.addData(opt.text)\n    qrcode.make()\n\n    const canvas = document.createElement('canvas')\n    canvas.width = opt.width\n    canvas.height = opt.height\n    const ctx = canvas.getContext('2d')\n\n    const tileW = opt.width / qrcode.getModuleCount()\n    const tileH = opt.height / qrcode.getModuleCount()\n    for (let row = 0; row < qrcode.getModuleCount(); row++) {\n      for (let col = 0; col < qrcode.getModuleCount(); col++) {\n        ctx.fillStyle = qrcode.isDark(row, col) ? opt.foreground : opt.background\n        const w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW))\n        const h = (Math.ceil((row + 1) * tileH) - Math.floor(row * tileH))\n        ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h)\n      }\n    }\n    return canvas\n  }\n\n  static setCanvas (id: string, options: any) {\n    const parent = document.getElementById(id)\n    parent.innerHTML = ''\n    parent.appendChild(QRCode.createCanvas(options))\n  }\n}\n"]}