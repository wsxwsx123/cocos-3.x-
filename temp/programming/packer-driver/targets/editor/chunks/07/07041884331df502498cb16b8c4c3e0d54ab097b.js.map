{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/test.ts"],"names":["_decorator","Component","QRCode","QRErrorCorrectLevel","ccclass","property","test","start","ctx","node","getComponent","cc","Graphics","QRCreate","url","qrcode","H","addData","make","fillColor","Color","BLACK","tileW","UITransform","width","getModuleCount","tileH","height","row","col","isDark","w","Math","ceil","floor","h","instantiate","find","setPosition","v3","round","active","rect","fill","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { QRCode, QRErrorCorrectLevel } from \"./QRCode\";\nimport * as cc from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"test\")\nexport class test extends Component {\n  start() {\n    // let qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    // console.error(qrcode);\n    // qrcode.addData(\"www.baidu.com\");\n    // qrcode.make();\n    // console.error(qrcode);\n    let ctx = this.node.getComponent(cc.Graphics);\n    this.QRCreate(ctx, \"www.baidu.com\");\n  }\n\n  QRCreate(ctx, url) {\n    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    qrcode.addData(url);\n    qrcode.make();\n\n    ctx.fillColor = cc.Color.BLACK;\n    //块宽高\n    var tileW =\n      this.node.getComponent(cc.UITransform).width / qrcode.getModuleCount();\n    var tileH =\n      this.node.getComponent(cc.UITransform).height / qrcode.getModuleCount();\n\n    // draw in the Graphics\n    for (var row = 0; row < qrcode.getModuleCount(); row++) {\n      for (var col = 0; col < qrcode.getModuleCount(); col++) {\n        if (qrcode.isDark(row, col)) {\n          //   ctx.fillColor = cc.Color.WHITE;\n          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n\n          let node = cc.instantiate(cc.find(\"testNode\", this.node));\n          node.setPosition(\n            cc.v3(Math.round(col * tileW), Math.round(row * tileH))\n          );\n          node.getComponent(cc.UITransform).width = w;\n          node.getComponent(cc.UITransform).height = h;\n\n          node.active = true;\n\n          ctx.rect(Math.round(col * tileW), Math.round(row * tileH), w, h);\n          ctx.fill();\n        }\n      }\n    }\n    // ctx.stroke();\n  }\n\n  update(deltaTime: number) {}\n}\n"]}