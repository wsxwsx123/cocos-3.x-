{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/test.ts"],"names":["_decorator","Component","QRCode","QRErrorCorrectLevel","ccclass","property","test","start","ctx","node","getComponent","cc","Graphics","QRCreate","url","qrcode","H","addData","make","fillColor","Color","BLACK","tileW","UITransform","width","getModuleCount","tileH","height","row","col","isDark","w","Math","ceil","floor","h","posx","round","posy","fillRect","fill","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { QRCode, QRErrorCorrectLevel } from \"./QRCode\";\nimport * as cc from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"test\")\nexport class test extends Component {\n  start() {\n    // let qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    // console.error(qrcode);\n    // qrcode.addData(\"www.baidu.com\");\n    // qrcode.make();\n    // console.error(qrcode);\n    let ctx = this.node.getComponent(cc.Graphics);\n    this.QRCreate(\n      ctx,\n      \"https://docs.cocos.com/creator/3.6/manual/zh/ui-system/components/editor/graphics.html\"\n    );\n  }\n\n  QRCreate(ctx, url) {\n    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    qrcode.addData(url);\n    qrcode.make();\n\n    ctx.fillColor = cc.Color.BLACK;\n    //块宽高\n    var tileW =\n      this.node.getComponent(cc.UITransform).width / qrcode.getModuleCount();\n    var tileH =\n      this.node.getComponent(cc.UITransform).height / qrcode.getModuleCount();\n\n    // draw in the Graphics\n    for (var row = 0; row < qrcode.getModuleCount(); row++) {\n      for (var col = 0; col < qrcode.getModuleCount(); col++) {\n        if (qrcode.isDark(row, col)) {\n          //   ctx.fillColor = cc.Color.WHITE;\n          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n\n          //   let node = cc.instantiate(cc.find(\"testNode\", this.node));\n          //   this.node.addChild(node)\n          //   node.setPosition(\n          //     cc.v3(Math.round(col * tileW)-this.node.getComponent(cc.UITransform).width/2 +w/2, Math.round(row * tileH)-this.node.getComponent(cc.UITransform).height/2 +h/2)\n          //   );\n          //   node.getComponent(cc.UITransform).width = w;\n          //   node.getComponent(cc.UITransform).height = h;\n          //   node.active = true;\n\n          let posx =\n            Math.round(col * tileW) -\n            this.node.getComponent(cc.UITransform).width +\n            w / 2;\n          let posy =\n            Math.round(col * tileW) -\n            this.node.getComponent(cc.UITransform).height +\n            h / 2;\n\n          ctx.fillRect(posx, posy, w*10, h*10);\n        //   ctx.fillRect();\n        //   ctx.stroke();\n          ctx.fill();\n        }\n      }\n    }\n    // ctx.stroke();\n  }\n\n  update(deltaTime: number) {}\n}\n"]}