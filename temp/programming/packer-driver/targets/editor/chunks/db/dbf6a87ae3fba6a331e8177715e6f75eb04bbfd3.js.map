{"version":3,"sources":["file:///Users/bane/NewProject_1/assets/scripts/test.ts"],"names":["_decorator","Component","QRCode","QRErrorCorrectLevel","ccclass","property","test","cc","Node","start","ctx","ctxNode","getComponent","Graphics","addComponent","btn_change","on","QRCreate","url","qrcode","H","addData","make","fillColor","Color","BLACK","roll","Math","floor","getModuleCount","tileW","UITransform","width","tileH","height","clear","row","col","isDark","w","ceil","h","posx","round","posy","rect","WHITE","fill","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { QRCode, QRErrorCorrectLevel } from \"./QRCode\";\nimport * as cc from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"test\")\nexport class test extends Component {\n  @property(cc.Node)\n  ctxNode: Node;\n\n  @property(cc.Node)\n  btn_change: Node;\n\n  start() {\n    let ctx = this.ctxNode.getComponent(cc.Graphics);\n    if (!ctx) {\n      ctx = this.ctxNode.addComponent(cc.Graphics);\n    }\n\n    this.btn_change.on(\"click\",()=>{\n      this.QRCreate(\n        ctx,\n        \"https://blog.csdn.net/Leo501/article/details/103174960\"\n      );\n    })\n\n    this.QRCreate(\n      ctx,\n      \"https://docs.cocos.com/creator/3.6/manual/zh/ui-system/components/editor/graphics.html\"\n    );\n  }\n\n  //绘制二维码\n  QRCreate(ctx, url) {\n    //根据QRCode来生成二维码数据\n    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\n    qrcode.addData(url);\n    qrcode.make();\n\n    ctx.fillColor = cc.Color.BLACK;\n    let roll = Math.floor(qrcode.getModuleCount());\n    //块宽高\n    var tileW = this.ctxNode.getComponent(cc.UITransform).width / roll;\n    var tileH = this.ctxNode.getComponent(cc.UITransform).height / roll;\n    ctx.clear ()\n    for (var row = 0; row < qrcode.getModuleCount(); row++) {\n      for (var col = 0; col < qrcode.getModuleCount(); col++) {\n        if (qrcode.isDark(row, col)) {\n          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n          let posx =\n            Math.round(col * tileW) -\n            this.ctxNode.getComponent(cc.UITransform).width / 2;\n          let posy =\n            Math.round(row * tileH) -\n            this.ctxNode.getComponent(cc.UITransform).height / 2;\n\n          ctx.rect(posx, posy, w, h);\n          //颜色\n          ctx.fillColor = cc.Color.WHITE;\n          ctx.fill();\n        }\n      }\n    }\n  }\n\n  update(deltaTime: number) {}\n}\n"]}